# Service to expose firefly on an available port in Kubernetes cluster
# Assigned port can be seen with `kubectl get services firefly`

apiVersion: v1
kind: Service
metadata:
  namespace: firefly
  name: firefly
  labels:
    app: firefly
spec:
  clusterIP: None
  ports:
    - port: 8080
  selector:
    app: firefly
    tier: frontend

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: firefly-upload-claim
  labels:
    app: firefly
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: firefly
  labels:
    app: firefly
spec:
  selector:
    matchLabels:
      app: firefly
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: firefly
        tier: frontend
    spec:
      containers:
      - image: fireflyiii/core:version-5.6.14
        name: firefly
        env:
        - name: APP_ENV
          value: "local"
        - name: APP_KEY
          valueFrom:
            secretKeyRef:
              name: firefly-secrets
              key: app_key
        - name: DB_HOST
          value: firefly-mysql
        - name: DB_CONNECTION
          value: mysql
        - name: DB_DATABASE
          value: "fireflyiii"
        - name: DB_USERNAME
          value: "root"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: firefly-secrets
              key: db_password
        - name: TRUSTED_PROXIES
          value: "**"
        ports:
        - containerPort: 8080
          name: firefly
        volumeMounts:
        - mountPath: "/var/www/html/firefly/storage/upload"
          name: firefly-upload 
        imagePullPolicy: Always
      volumes:
        - name: firefly-upload
          persistentVolumeClaim:
            claimName: firefly-upload-claim
      nodeSelector:
        kubernetes.io/arch: amd64