---
apiVersion: v1
kind: Service
metadata:
  name: proxmox
  namespace: networking
spec:
  ports:
    - name: proxmox
      port: 8006
      protocol: TCP
      targetPort: 8006
  clusterIP: None
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: v1
kind: Endpoints
metadata:
  name: proxmox
  namespace: networking
subsets:
  - addresses:
      - ip: 172.16.0.222
    ports:
      - name: nfs-tcp
        port: 2049
        protocol: TCP
      - name: nfs-tcp2
        port: 111
        protocol: TCP
      - name: proxmox
        port: 8006
        protocol: TCP
---
apiVersion: v1
kind: Endpoints
metadata:
  name: ha
  namespace: networking
subsets:
  - addresses:
      - ip: 172.16.0.4
    ports:
      - name: influx
        port: 8086
        protocol: TCP
      - name: z2m
        port: 8485
        protocol: TCP
      - name: mqtt
        port: 1883
        protocol: TCP
      - name: ha
        port: 8123
        protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: ha
  namespace: networking
spec:
  ports:
    - name: ha
      port: 8123
      protocol: TCP
      targetPort: 8123
  clusterIP: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ha
  namespace: networking
  generation: 1
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
spec:
  ingressClassName: nginx
  rules:
    - host: ha.emu.sh
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ha
                port:
                  number: 8123
---
apiVersion: v1
kind: Service
metadata:
  name: proxmox-mini
  namespace: networking
spec:
  ports:
    - name: proxmox-mini
      port: 8006
      protocol: TCP
      targetPort: 8006
  clusterIP: None
  type: ClusterIP
---
apiVersion: v1
kind: Endpoints
metadata:
  name: proxmox-mini
  namespace: networking
subsets:
  - addresses:
      - ip: 172.16.0.7
    ports:
      - name: proxmox-mini
        port: 8006
        protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proxmox-mini
  namespace: networking
  generation: 1
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
spec:
  ingressClassName: nginx
  rules:
    - host: prox.emu.sh
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: proxmox-mini
                port:
                  number: 8006
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proxmox
  namespace: networking
  generation: 1
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
spec:
  ingressClassName: nginx
  rules:
    - host: proxmox.emu.sh
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: proxmox
                port:
                  number: 8006
---
apiVersion: v1
kind: Endpoints
metadata:
  name: opnsense
  namespace: networking
subsets:
  - addresses:
      - ip: 172.16.0.1
    ports:
      - name: opnsense
        port: 8443
        protocol: TCP
      - name: opnsense-ssh
        port: 22
        protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: opnsense
  namespace: networking
spec:
  ports:
    - name: opnsense
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: opnsense-ssh
      port: 22
      protocol: TCP
      targetPort: 22
  clusterIP: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proxmox
  namespace: networking
  generation: 1
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
spec:
  ingressClassName: nginx
  rules:
    - host: opnsense.emu.sh
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: opnsense
                port:
                  number: 8443
