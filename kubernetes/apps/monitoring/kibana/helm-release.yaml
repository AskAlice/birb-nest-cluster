---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kibana
  namespace: monitoring
  labels:
    component.kutara.io/part-of: standard-helm-release
spec:
  interval: 5m
  chart:
    spec:
      chart: kibana
      version: 7.16.1
      sourceRef:
        kind: HelmRepository
        name: elastic
        namespace: flux-system
      interval: 5m

  values:
    hostNetwork: true
    replicas: 1
    elasticsearchHosts: "https://elasticsearch-master.svc.cluster.local:9200"

    extraEnvs:
      - name: "ELASTICSEARCH_USERNAME"
        value: ${ELASTIC_USERNAME}
      - name: "ELASTICSEARCH_PASSWORD"
        value: ${ELASTIC_PASSWORD}
      - name: "KIBANA_ENCRYPTION_KEY"
        value: ${ELASTIC_PASSWORD}
      - name: KIBANA_ENC_SAVED_OBJ_ENCRYPTION_KEY
        value: ${ELASTIC_PASSWORD}

    kibanaConfig:
      kibana.yml: |
        xpack.security.encryptionKey: ${ELASTIC_PASSWORD}${ELASTIC_PASSWORD}${ELASTIC_PASSWORD}${ELASTIC_PASSWORD}
        xpack.reporting.roles.enabled: "false"
        xpack.encryptedSavedObjects.encryptionKey: 80483e8548275b9b6b2033a47b438f5b
        xpack.reporting.encryptionKey: c7b102b2fac893429ffee42835714395
        server.ssl:
          enabled: "true"
          keystore.path: /usr/share/kibana/config/certs/elastic-certificates.p12
          truststore.path: /usr/share/kibana/config/certs/elastic-certificates.p12
          keystore.password: ''
          truststore.password: ''
          certificateAuthorities: [ "/usr/share/kibana/config/certs/elastic-certificate.crt" ]
          clientAuthentication: "none"
          supportedProtocols: [ "TLSv1.2", "TLSv1.3" ]
        elasticsearch.username: ${ELASTIC_USERNAME}
        elasticsearch.password: ${ELASTIC_PASSWORD}
        elasticsearch.ssl:
          certificateAuthorities: [ "/usr/share/kibana/config/certs/elastic-certificate.crt" ]
          keystore.path: /usr/share/kibana/config/certs/elastic-certificates.p12
          truststore.path: /usr/share/kibana/config/certs/elastic-certificates.p12
          keystore.password: ''
          truststore.password: ''
          verificationMode: "certificate"
        newsfeed.enabled: "false"
        telemetry.enabled: "false"
        telemetry.optIn: "false"

    persistence:
      config:
        enabled: true
        existingClaim: kibana-config

    volumeClaimTemplates:
      - metadata:
          name: kibana-config
        spec:
          accessModes:
            - ReadWriteMany
          storageClassName: "nfs-client"
          resources:
            requests:
              storage: 200G
    extraVolumes:
      - name: kibana-certs
        persistentVolumeClaim:
          claimName: kibana-certs
      - name: kibana-config
        persistentVolumeClaim:
          claimName: kibana-config
    extraVolumeMounts:
      - name: kibana-certs
        mountPath: /usr/share/kibana/config/certs
        readOnly: true
      - name: kibana-config
        mountPath: /usr/share/kibana/config

    auth:
      enabled: true
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          hajimari.io/icon: video-input-antenna
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    resources:
      requests:
        memory: 2048Mi
        cpu: 500m
      limits:
        memory: 8192Mi
