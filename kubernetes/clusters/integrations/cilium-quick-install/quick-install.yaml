---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-system"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-system"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-system"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-system"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU0rVDdvYjhPVkNTNEVUQTJ1YmRkdGt3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBMU1qWXdNRE0zTURCYQpGdzB5TlRBMU1qVXdNRE0zTURCYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURxN3J5OHBNMFp1L2RrdEJJVnN5V1oKZG5YZ3p2NXRxZTNwRkNOUDhOTzVkK1h1RDMrWTc0RlVOV2hjaE9SV0RkekJKUG9zWTNVSEJpckF4R1RzVmovRgorSUNud1hVTU1DMjllMkRRZFFFKzkxZG05L29aZWhJdldhOVNiNDN2RmpybHMxSEJ5aVFMb0ZRa01oaHVLVGk3Ck54M1pJcGIrZEtWN080RTZzQzN3S29BUk11djVKeTVrTTV4cDlwU3ZISkszWnIyU01mYmRoVC82YndiKzNYUnEKZWJIYzEyS056WXFYSDJmVzdDNnY0VjBjQm9LRVlzNElhSEJCZDFmcVpVNDU0RDhJdUZRS2VaVExFcE55VEd1TgpBY2lDMEkyNmpncFJpNTdhL2JKQjhSbGkvNjZxNHZDLzduL1diSTBYayt6ZTcyakZOWVZnYiszNmpmQmhLaXVMCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVTU5id2wrVjllSzE3dTN6cQo0cXVCczhTMU81TXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTkRvYXEwb2E1Z2JCTW5Xam9QUUIycFJwZjUrClhFZjBKRzA3UGJmeExHSzdLNjlLQjNsNUdBMkFzQ2IyOVoyQ3ovMk9tTzVhNUNBSGxmQVptM1QvS1ZDQU1LU0cKc0FHcmRBbXc2ekpZaC9ZNVRkRHFNcDJFMGk0YjVkZnlad3BteDZKMnhUeXR2RjQvTlgxWWx4TEdVSCtxNWJRVApXZTM3VmR5TnNEOXZxY0drYUhIdjg1RDVXMFRlVlg3aWhWWU1pMzB3eVhkWXp1WXJDTmEydEhnaGlTQlp0a0NUCjhidk5MeHhuRDN6MjJUUVBWbkZNa1luRHBoM2xnL21NQjBTUTBZQ0djY3VwbExjcWlDMCswMGZnMXA0ZzZBd1AKTFQ4RS9aQzlqM1VNOHN6cHBpUUR3QUdBRThVOWZqd0d4bnhTckVsTmVPNEU0Z0h4cW9QU3lkQUhqT0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNnU2OHZLVE5HYnYzWkxRU0ZiTWxtWFoxNE03K2JhbnQ2UlFqVC9EVHVYZmw3ZzkvCm1PK0JWRFZvWElUa1ZnM2N3U1Q2TEdOMUJ3WXF3TVJrN0ZZL3hmaUFwOEYxRERBdHZYdGcwSFVCUHZkWFp2ZjYKR1hvU0wxbXZVbStON3hZNjViTlJ3Y29rQzZCVUpESVliaWs0dXpjZDJTS1cvblNsZXp1Qk9yQXQ4Q3FBRVRMcgorU2N1WkRPY2FmYVVyeHlTdDJhOWtqSDIzWVUvK204Ry90MTBhbm14M05kaWpjMktseDluMXV3dXIrRmRIQWFDCmhHTE9DR2h3UVhkWDZtVk9PZUEvQ0xoVUNubVV5eEtUY2t4cmpRSElndENOdW80S1VZdWUydjJ5UWZFWll2K3UKcXVMd3YrNS8xbXlORjVQczN1OW94VFdGWUcvdCtvM3dZU29yaXdJREFRQUJBb0lCQVFERDV1bjVRRTlMQzBPagpkTWl6MFp3ajJQVTR6a0s1UFg4RzRlVUVUeVN1UHIyOEFxNTY0QlR2SEUzM0FGWExNR29Kb1FVQUtMczRiVHNQClhYVnU0Z2p4MDJPcy81UFQ0d1R4UVVXYzdrUm90aVhxMWhOMlZTVisySUZxODF6ZXBxSGNVdWgwK1ZPUFlsVm4KaldKejBlbmRxM3MzU2pHdzQ2SHVIZE9JRmN0b3ZON1BWR2RNQm5YNHNSRFBqZ1lPYVFwVUtjNU1CRURJenFLTAo0S2dqN3BIcU16WVJhRTRtZkpYV0lXUGdnREVZREk4UmFuTXZoeUZqYWlGYTZuUXlkSEo5bkZ2TzV2VFkvYzNKCjJPKzJ3b3AyL3hkNURySGkwUWpyYi9ISkp3NTNzWm9jRXBXdmI0WVdkY1hFY09nQU5TRHhGSnVPZDltZG13K2EKN1FTK0N1aFpBb0dCQVBxYWczSTBWT0tOS2grcDFFM1BERnBRd1dsSTlDcEl2aWcvR0pJdkRNYWRXUnNlNjM0NQp2ci9nSDgvR1ZwNXpQZGdzc3V6UHFQaFNDaWZUM3hwSHd5ait3TFpXK2NrMjdYZU9pUHNQOURJaXRqZjMydW1sCkxQS2g0Q1phNkJldXBIOWFEeVF6QVNGOU5kNUVhQkhFMHpRYklJSjlaTVZTTmRrV040UWNyMzcvQW9HQkFPLzkKMWRNQlkwTE93NkE2UWc3VUhPYithV1QwUkl1eEozSC9vWmc2WXpWOHQrR0dyUlNQY1pTY1lwSk80S3FSSmM2YwpvNVpvb3BPempPNkJYNUFzOFhMV2VvcVRoRWRFZ1Q5UlFnK3JrT0I1VWZ3Yk1vWmZWVGt2NXY2dVZha2ZLcnZ1CjNONE1TTDlzTUVRWWxzWlZyT0MwRkhoSTZoUWUwMHRzYjdodnE5OTFBb0dCQUxQZHZzWnpaUkdOL0ZQcGt1V2QKMitIZTRGTHU5OEI1b1hKRmh4ODFBZGgwQ3daNk5NL09KbWlWTm4vc2ZUTVF4NnltdUcxYnhvMGtaUUdkQWg1YwpyMmgzSUY0L0l0MFd2VzM0TWJ6eEFIWVRqL0d2eGNHNHVnQVR5MHY4SjJVSUJpMFp1SkJrdzBVRUYydkdjV04vCmY0K0FnTjdublRJN0JVY2d1UXZyZ3RLRkFvR0FQSENuL2lrV1Q0ZjFHcEF4Zkx5TXZ0d0p2UVFMazBhOVVXZDQKMGZhNmI0a0dZa1RocUJEc0lPbzFwUFU2ZlpwcWRCdGMwNDlzaWxnb3dSUlI5ZVJydG1rdm1XREhhbzlsSVlZYwpaZ2ZtUjdJbUpLRFEyNmg4dFJkTVRJMnBReHQzVHJjOFpxdWZVcDR6bGFLL3JobDduV2VjMUNKQTJXcGQrbHZICjB5SkVuZFVDZ1lCSnA0ckswejZ0cHpHb2Z3eG5DQkMvNXc3S0kxQktOUFozOVFJVU1zS1l1eTUrSk5RcXBRYmoKaE9FZE51OGlHbHAvM1poQkhBbE1haWlWK3VMd1BDL1VwQmpGRC9yMW83d1VuUTAvUzJVYVhkU0RRbk0zNEc2bApuMnR4TkQ2ZGlQemNlUzdpRXZWMnozNUN6eDI1VTdKaFNTUkVEekdoWnVLLzI4aVZ5aUQ0aWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU0rVDdvYjhPVkNTNEVUQTJ1YmRkdGt3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBMU1qWXdNRE0zTURCYQpGdzB5TlRBMU1qVXdNRE0zTURCYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURxN3J5OHBNMFp1L2RrdEJJVnN5V1oKZG5YZ3p2NXRxZTNwRkNOUDhOTzVkK1h1RDMrWTc0RlVOV2hjaE9SV0RkekJKUG9zWTNVSEJpckF4R1RzVmovRgorSUNud1hVTU1DMjllMkRRZFFFKzkxZG05L29aZWhJdldhOVNiNDN2RmpybHMxSEJ5aVFMb0ZRa01oaHVLVGk3Ck54M1pJcGIrZEtWN080RTZzQzN3S29BUk11djVKeTVrTTV4cDlwU3ZISkszWnIyU01mYmRoVC82YndiKzNYUnEKZWJIYzEyS056WXFYSDJmVzdDNnY0VjBjQm9LRVlzNElhSEJCZDFmcVpVNDU0RDhJdUZRS2VaVExFcE55VEd1TgpBY2lDMEkyNmpncFJpNTdhL2JKQjhSbGkvNjZxNHZDLzduL1diSTBYayt6ZTcyakZOWVZnYiszNmpmQmhLaXVMCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVTU5id2wrVjllSzE3dTN6cQo0cXVCczhTMU81TXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTkRvYXEwb2E1Z2JCTW5Xam9QUUIycFJwZjUrClhFZjBKRzA3UGJmeExHSzdLNjlLQjNsNUdBMkFzQ2IyOVoyQ3ovMk9tTzVhNUNBSGxmQVptM1QvS1ZDQU1LU0cKc0FHcmRBbXc2ekpZaC9ZNVRkRHFNcDJFMGk0YjVkZnlad3BteDZKMnhUeXR2RjQvTlgxWWx4TEdVSCtxNWJRVApXZTM3VmR5TnNEOXZxY0drYUhIdjg1RDVXMFRlVlg3aWhWWU1pMzB3eVhkWXp1WXJDTmEydEhnaGlTQlp0a0NUCjhidk5MeHhuRDN6MjJUUVBWbkZNa1luRHBoM2xnL21NQjBTUTBZQ0djY3VwbExjcWlDMCswMGZnMXA0ZzZBd1AKTFQ4RS9aQzlqM1VNOHN6cHBpUUR3QUdBRThVOWZqd0d4bnhTckVsTmVPNEU0Z0h4cW9QU3lkQUhqT0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUpBMldnbUdWcHpQR3M0YW5ZVHhaNkV3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBMU1qWXdNRE0zTURCYQpGdzB5TlRBMU1qVXdNRE0zTURCYU1DTXhJVEFmQmdOVkJBTU1HQ291YUhWaVlteGxMWEpsYkdGNUxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOMVBlWVJ6a1pOQzVNNFIKV2o1MU9CR0JhU3VwVTNhbXdjQisyZmhqcnlUR0ZTYkhJRGpFQmxGMk9BRjB6VDN5Z29PdU00aWs3TmJ0R05xVgo3Yjc4VEhnVmhuMzhzRzlDRDdVbXpTMGZpWnMvc3Z5T0FITHNoa0o2M080MHNZSFA1K3c2cktYOEw5ZG5tcnVsCnBDeGc2R29UbGRkYkkrV0VjbVJFSFNPZzI0K1hVaWd5WTM1MjQwbnVIV3EyM1h1NUFXUG9FNkF0RVRSb0hxWXAKTmVjU2Nqam8remNGZDZTRDNKOFJENzlldDQ5cU9jZVdWVEVYQWtFdUxtUThnRFB0L3VkbkdBRTNXVUU2VWZmMwozYUE2aEUzYzVpam0xUXJvbzhTZHUzZzJlWnl5dWhaWTk0ekNTWGlkdXM1cldnR0pmR08veFdNcG1ZQ29EUDRWClB6WXliVE1DQXdFQUFhT0JoakNCZ3pBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVNTmJ3bCtWOQplSzE3dTN6cTRxdUJzOFMxTzVNd0l3WURWUjBSQkJ3d0dvSVlLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNjb2kyYVpLeG15Z1N5Z0hCdmlWRGg5K1FVc2FwTGZ2ZzUKd1EzTUdpMzRWSm5pcnpHaHpnb0dQWGJGS1dOa2R4aXh1RFUxSFhLZHFmbWljbkwrdGhtYi9vSUFwOTJjSm8zcgpObSt1L25UR0NMdDFLd2h4V1NMdDNvYmRPbTlqZFhlNFhNWEpxY1BpelYralp6ZzE2WERleEFjam50NGErbldsCkNnMmpKQU94b2ZkZVdFSXFKdkpEMTlrNytiRmNDdTBLNEhLS21CQ2VFS3g0Nmw4V0hIVkxDNWovL1JsVW81ZFcKSVE1NVM5cDZ6OHpUTitQWDVJblBGMDFtL2RiVWpxTjFSMjhyeDdvRUFpd2hkSTVGZXk4MmMwL2tyMGlaVWYzYgpOS2sxZ3lLdm9hNGpwSEVGbmU4SzIvN09pRDBMcVpzZ3Y2ZDI0RmQyS0VmMUpRTWpDbnVVCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM1U5NWhIT1JrMExremhGYVBuVTRFWUZwSzZsVGRxYkJ3SDdaK0dPdkpNWVZKc2NnCk9NUUdVWFk0QVhUTlBmS0NnNjR6aUtUczF1MFkycFh0dnZ4TWVCV0dmZnl3YjBJUHRTYk5MUitKbXoreS9JNEEKY3V5R1FucmM3alN4Z2MvbjdEcXNwZnd2MTJlYXU2V2tMR0RvYWhPVjExc2o1WVJ5WkVRZEk2RGJqNWRTS0RKagpmbmJqU2U0ZGFyYmRlN2tCWStnVG9DMFJOR2dlcGlrMTV4SnlPT2o3TndWM3BJUGNueEVQdjE2M2oybzV4NVpWCk1SY0NRUzR1WkR5QU0rMys1MmNZQVRkWlFUcFI5L2Zkb0RxRVRkem1LT2JWQ3VpanhKMjdlRFo1bkxLNkZsajMKak1KSmVKMjZ6bXRhQVlsOFk3L0ZZeW1aZ0tnTS9oVS9Oakp0TXdJREFRQUJBb0lCQVFEVm5WS3owRUZoblIzdwo4YnJqc28xT0NGV1ZlVGxBdTdFa3RzeDUvdTRkVnIwdjB1QjlLbWpXMUg4Mm1LRksrL3VTVXVFWE1lb1Jnb1dNCjUwNjJIQjFMZzZ0dmpDcFpHYkREc0JJM1RjdXErSTh4UzNlUGRsSVpkVEl2RXRtTGJUeDFQaVZMaWVJN3pwc0MKS040UW4vRjJBaldOeTBFWTF3RDdXdXV0YWlURHNRWkVtdndERjJ5WUxQZWtBWm4rbWRMNnJHb21EMkxZbFdCZwpnZkJkOGhmS0h1S3FyS0FFRVhxc0Q1bUQ4V2NObklRREtOaFhlN3hWYWN0VDVYcHBubWpRT3NCTDlCdDhqMUUwCmdwak5xTXBjTmowTDVZdWc0SDFZZFZtMFdLcWQvc1RwaEtsYUQzMDh6T28xOHRpdyt4NnlyVmUwVmsxMkQ3OGsKczVzdm8remhBb0dCQVBTM3Zkc1dOQUphYzEwT1g4SW8zWXU0ZnZTWGpJbXBEalJLa1FZaWc0OElaNWVGNEhBRApDRnFRUlc1ajRIZE1qN3prK2RqMXp0Zlk0OFRsY0JWY3pvaW5ZZkplWTJER2R1czIyS00zSzVFSmROZEJ4WDlwCk9HME1FUm1LS284SUZkV1B3Qm9SdXprUEY2Nm1jZEMxZHZhOHkxdnJhZ0tleG9CVEszdEVZaWc1QW9HQkFPZUQKZUh6OGp3OGkvNkR4eis1NWtpR1VwempQaHVTQ29oM2dJMHpJNE43NjFSdmdpNGNDUVNIZFNNbDYrNG9qT1hoMQpqU3BvM2JkYlgxVG41TXR6dUJvVEtuTUs2OVZoeUU2a3Z1d2dNUFBRUS95cXVUZWdRMnBkSkkreUdBK3dKb3lMCmFpa0NaTVR4cjRZNVV0dDVmdWh3TXlNL05vRSsvTmhaN21kVWNNakxBb0dCQUpNcWZHNW9wOVpTZHRZYmN0TGMKcUg4QjhMYysvREU5RFdHOUJnSGVkNmRvc29PWTZ5UHhidkNubWxtTWpzeXZxakU2c2xZYlhNekpqaEEydW5UZQpYd1luUXV2eWYya1BjU3g2eTBVOFJHTHdnT2VDa2piUkhESFg4K0NjQ29RQnBML050d1QyYk5VZmttcGhoa2l4CkdGM0JvN29mbEowR3h2RWRFeVVLTnMxaEFvR0FCVDd3WXZ5aURUakF6QmZPbTF1NzJQRHlYUkl1djB6S2VaelQKai9EWlQ1UWxjZzFEZkJxcitTVjNlY0ZFbzl1cWVMVkpMcFhUdUV6a3V4cktEMlllM05Ca1hOajVnUXRISzZrRgovbm00UWo0TTNGUE9BSm1zRFdQdzZTU2k4UEFQMzQxbEtXcTVkOUQySmpkMFRpN1JsbGk4ZitiMXlEWHlLc0RXCjZ4WjV1OE1DZ1lFQXBZWG1aVTAxNFF3VzdISVFVUWxmaFUvSGVNTnZIeUhydzhqSW9MUGRma2xiVGdmOTY1ZU4KRDAyWEpHR1JaVkkycFJwK2VpM3ZzV2lEOU5iQmp4cnFkMmZYYWhmQkYxL1IyajdXOVA0TFRRV1lOS3p3Ymc3TQpyVkNiS2lkWkpOOFFpR2R3OW11d2ozUEs5QUJmR2FycWJxN2FsOENEdFJPbnM2SXZKS0tFK0w0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU0rVDdvYjhPVkNTNEVUQTJ1YmRkdGt3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBMU1qWXdNRE0zTURCYQpGdzB5TlRBMU1qVXdNRE0zTURCYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURxN3J5OHBNMFp1L2RrdEJJVnN5V1oKZG5YZ3p2NXRxZTNwRkNOUDhOTzVkK1h1RDMrWTc0RlVOV2hjaE9SV0RkekJKUG9zWTNVSEJpckF4R1RzVmovRgorSUNud1hVTU1DMjllMkRRZFFFKzkxZG05L29aZWhJdldhOVNiNDN2RmpybHMxSEJ5aVFMb0ZRa01oaHVLVGk3Ck54M1pJcGIrZEtWN080RTZzQzN3S29BUk11djVKeTVrTTV4cDlwU3ZISkszWnIyU01mYmRoVC82YndiKzNYUnEKZWJIYzEyS056WXFYSDJmVzdDNnY0VjBjQm9LRVlzNElhSEJCZDFmcVpVNDU0RDhJdUZRS2VaVExFcE55VEd1TgpBY2lDMEkyNmpncFJpNTdhL2JKQjhSbGkvNjZxNHZDLzduL1diSTBYayt6ZTcyakZOWVZnYiszNmpmQmhLaXVMCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVTU5id2wrVjllSzE3dTN6cQo0cXVCczhTMU81TXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTkRvYXEwb2E1Z2JCTW5Xam9QUUIycFJwZjUrClhFZjBKRzA3UGJmeExHSzdLNjlLQjNsNUdBMkFzQ2IyOVoyQ3ovMk9tTzVhNUNBSGxmQVptM1QvS1ZDQU1LU0cKc0FHcmRBbXc2ekpZaC9ZNVRkRHFNcDJFMGk0YjVkZnlad3BteDZKMnhUeXR2RjQvTlgxWWx4TEdVSCtxNWJRVApXZTM3VmR5TnNEOXZxY0drYUhIdjg1RDVXMFRlVlg3aWhWWU1pMzB3eVhkWXp1WXJDTmEydEhnaGlTQlp0a0NUCjhidk5MeHhuRDN6MjJUUVBWbkZNa1luRHBoM2xnL21NQjBTUTBZQ0djY3VwbExjcWlDMCswMGZnMXA0ZzZBd1AKTFQ4RS9aQzlqM1VNOHN6cHBpUUR3QUdBRThVOWZqd0d4bnhTckVsTmVPNEU0Z0h4cW9QU3lkQUhqT0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRZldDRFo2U25iL2JtRVU4MXNidjFDVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURVeU5qQXdNemN3TUZvWApEVEkxTURVeU5UQXdNemN3TUZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5XMWdaZUEKd2lKdE55eExPd1ZPd2c0THRSR0Vuek8zL29UQ2FCbENtWEs0cnVWWVMzN2tJWGYvbGMzalNvWmRKYnBZTTcwbwp3aXdlRFByVXFFazZGdS94cVRQWHhIUXNseXRnd204V2lrNzBoMG5YU1BHODBOZlNJMDN2aERrbjA1eElrbFRyClRDWUNFekdpRDBUaGVqRXpwSjRrNzFqblRFSGFDSXY0bkc2TXdyeTRmR09hU291bzNvRkd1blcvNVlNbzEwWXMKRzBNQUhBeHNkQXJRWVV3bFBQZ0VvVndYU1EzUFJPN3dYUGl5V1hEcFJJaktWc2lZMzhPMlREZlhqVFZUSnJSdQpNdFhsR2YrT01icFY1aHVoakRPSjViS3NWMGZndGZOdm5KV3lFV2N0VGZEejhVRFdtR0ptd241TkplVk9GYmZiCjBOS3pxUnkvdzI5dWp2Y0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVQpNTmJ3bCtWOWVLMTd1M3pxNHF1QnM4UzFPNU13S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU1ZVFJQOGoxbGk2bUkzWmwKWUVDcElaSW5LeW5qVkNTdEFvK2M2MklCdmRRUVhRdnZCcC84RzZuMUlMbzdWWVNzV01nZjZ2N0gwSWRuNzB0QQpRcHFUYWFhd3hNN2pNb1FCeXVWWjludzJ5VWtCRkl0WWZxbjVzdmQzeVpNMytRcFhacXpiOWZOcFZoOEtsL3VGCkU1dkkrWlhXNWZkMnNlMVN5VDNZMERJZGVPSi9oTUUyZXJmSE5PRjRqRTJQTXA1ZysvTHpvWlJ3Y1NzS3g4elYKYXZCeW1sNlllKzhoTWtkcEFGRDNnd0hiM3kwcmhvVnB5YzhrcloyTFZZMWxHSGkxOE1iZ05pVjYzcVNncGx4SwpaWXRTbmlVendZZDRVTXNDekNDbnc2bjNTbXR3UEd3eXdwREptZThBdlBJaDdPdnowQVhzaEo0T05DdnR6VDZrCjB1K1J3dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMWJXQmw0RENJbTAzTEVzN0JVN0NEZ3UxRVlTZk03ZitoTUpvR1VLWmNyaXU1VmhMCmZ1UWhkLytWemVOS2hsMGx1bGd6dlNqQ0xCNE0rdFNvU1RvVzcvR3BNOWZFZEN5WEsyRENieGFLVHZTSFNkZEkKOGJ6UTE5SWpUZStFT1NmVG5FaVNWT3RNSmdJVE1hSVBST0Y2TVRPa25pVHZXT2RNUWRvSWkvaWNib3pDdkxoOApZNXBLaTZqZWdVYTZkYi9sZ3lqWFJpd2JRd0FjREd4MEN0QmhUQ1U4K0FTaFhCZEpEYzlFN3ZCYytMSlpjT2xFCmlNcFd5SmpmdzdaTU45ZU5OVk1tdEc0eTFlVVovNDR4dWxYbUc2R01NNG5sc3F4WFIrQzE4MitjbGJJUlp5MU4KOFBQeFFOYVlZbWJDZmswbDVVNFZ0OXZRMHJPcEhML0RiMjZPOXdJREFRQUJBb0lCQUdJcG9DQU9GWjRvbW5vdgpDQ28wOWUvcnNyMGNOT0JWdUlRVXBDcE9MQnZFOXhrRGlKSDlpZDRMdVN5OEpXUTRidmI4UXErMWhCTXRybnFjCnFid1JBYTR2UzdBemdOcDRET3Z3NHY2UjFPL1ZaRHNudHlyS3R3Y2JUL29oZFpPblZvem56TWRTMlVSd0dZN24KeUttMEJDT0xmQ2JrQWtqTTNYczJBazBBNGlIb2tQcjFFSzRuUllxUy9aKzBCUWtIanFWYUJpQzl3VnpXU2JOQwpYMTh0R0ZWT0I4dFZMUlVxU2hRanZ3ai9yWG8zeTJvalowYTdxZlVCWmZYT2NmNFdTM0duSVI1QzY0Q3NJVERGCnpDSE1EaVpRK0JhMFRKdFUrM25EbEY4VXJNbHZSeTFmQWFjVTNqemVCU2J2dFQ1MjFkTTBqS2IwOHV2bDlsWG8KL0tGUVFkRUNnWUVBM3FVTVNLVFhicm9HcUphbWRxM09WeUQvVUV3TlQwT3lqazhqRm53TTFNRjF2aXpWL0hMaQoxMEE5UUZBOWtwTVducnl4WFRIdVhaWW05TWtWaEU4cUE1UDVxT2VtMlpwU2Z1Z0EwZGhZWUt4T2J6UFN5aGJRCjlPbGRiM0lRd3pNZWFtZE1HYTVncS8rQmlFV3loQWM2dFZwSUIzSXlhMytoVlpaVGZKbkhneWtDZ1lFQTlibkEKcW9tZWhlbFNWb3lxdC9TaTR4NlMrNk9HRDh1ejdBREtzeElTZno4U2VWMXRscGg0ME5NWFQzVmU2UWVaN2Zlcwp1dDY0eTJFc0ZRd1hrNjR6ZE11cmR2ZS84WWM2aFdweE1WRk1vcnA3c3pmK0NjZGVISWtPK3U2V3RzVzFmQzhuCkV1eFFPczVObXNvWW1Zci9IYUxLSHF3YkhUZ2ZldTBEbkppaTVSOENnWUJackdoU0tmS0xLbW5jSlRGT3c1cEUKQllwUHNSSDdSdXozM0cvcGNuVklpOUw4a2RwdUgyZTJBcTJvNWFpbkRJOGp5Q1Ezd1JDY3FRbHZ0ajN3V0dJMwpwclg3amJIcUd2bjNHMEtaUW1YMktmQTlZY1lZbHkvNk5MUHBXeXZkTXcyaEZaSFZGaUxobzd0c1E0WXZIeXBLCk9ONmlBU0RGbzFZN3ZweEpwelp3WVFLQmdFQzl2eUJ2ZjkvQ1dKcExGNU8rRmNpSFBxeWtLZWN4Z1djVjBsSVoKMmR2Q3oyaEFrR1lVS0FqRkJTZy9RVkZlV2xVVFkyUWMyRTFsZmNyUjA4aHFKazZJZHRXeWN0VDlEeE1sdDBzSwpJNG5nWGtVYTVJakpDV2UxU01nZVlvRW5XQ2l1OTdtSm41M095eTJVUDZUOHRUaW1zbUFnY2toaGlCSElMcUpzCnFNWjdBb0dCQU5OVVhBWjh2WXNUMGFQTVRYb212K0tzTFZ4UnZ5em5HYzhYRjlHUGlQczVxcG15Z3RJNHJkYW0KUmVjcjR2bjdCY3RHcXNJZ1lNSG43T3k4NG5GK1Y2RTgvUGZuK2liamNwU2UxK1l1eUttUWFQRVF0bGJvOElFdApmUXNzUXRxRllucFUraVNxOWZOVVUzLzJoeVNQd1ovMHc4enUza2luTjZQUUJBQ1ZSVXNxCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
data:
  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"
  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9091"
  # Port to expose Envoy metrics (e.g. "9095"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9095"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":6942"
  enable-metrics: "true"
  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"
  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium
  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s
  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"
  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"
  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"
  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""
  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: disabled
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"
  enable-ipv4-masquerade: "false"
  enable-ipv6-masquerade: "true"
  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"
  kube-proxy-replacement: "disabled"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-routes: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9092"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "172.45.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  annotate-k8s-node: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:4254\"\nlisten-address: :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file: /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls: true\n"
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      # To annotate the k8s node with Cilium's metadata
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      # Deprecated for removal in v1.10
      - create
      - list
      - watch
      - update
      # This is used when validating policies in preflight. This will need to stay
      # until we figure out how to avoid "get" inside the preflight, and then
      # should be removed ideally.
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints
      - ciliumendpoints/status
      - ciliumnodes
      - ciliumnodes/status
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumlocalredirectpolicies/status
      - ciliumegressnatpolicies
      - ciliumendpointslices
    verbs:
      - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      # to automatically delete [core|kube]dns pods so that are starting to being
      # managed by Cilium
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # To remove node taints
      - nodes
      # To set NetworkUnavailable false on startup
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # to perform LB IP allocation for BGP
      - services/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      # to perform the translation of a CNP that contains `ToGroup` to its endpoints
      - services
      - endpoints
      # to check apiserver connectivity
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumnetworkpolicies/status
      - ciliumnetworkpolicies/finalizers
      - ciliumclusterwidenetworkpolicies
      - ciliumclusterwidenetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/finalizers
      - ciliumendpoints
      - ciliumendpoints/status
      - ciliumendpoints/finalizers
      - ciliumnodes
      - ciliumnodes/status
      - ciliumnodes/finalizers
      - ciliumidentities
      - ciliumendpointslices
      - ciliumidentities/status
      - ciliumidentities/finalizers
      - ciliumlocalredirectpolicies
      - ciliumlocalredirectpolicies/status
      - ciliumlocalredirectpolicies/finalizers
    verbs:
      - '*'
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - update
      - watch
  # For cilium-operator running in HA mode.
  #
  # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
  # between multiple running instances.
  # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
  # common and fewer objects in the cluster watch "all Leases".
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: Namespace
apiVersion: v1
metadata:
  name: cilium-system
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: Namespace
apiVersion: v1
metadata:
  name: cilium-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: "hubble-ui"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9095"
  labels:
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
    - name: envoy-metrics
      port: 9095
      protocol: TCP
      targetPort: envoy-metrics
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Namespace
apiVersion: v1
metadata:
  name: cilium-system
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Namespace
apiVersion: v1
metadata:
  name: cilium-system
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
  labels:
    k8s-app: hubble
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9092"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
    - name: hubble-metrics
      port: 9092
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
    - name: peer-service
      port: 4254
      protocol: TCP
      targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
              - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                      - cilium
              topologyKey: kubernetes.io/hostname
      containers:
        - name: cilium-agent
          image: "quay.io/cilium/cilium:v1.11.5@sha256:79e66c3c2677e9ecc3fd5b2ed8e4ea7e49cf99ed6ee181f2ef43400c4db5eef0"
          imagePullPolicy: IfNotPresent
          command:
            - cilium-agent
          args:
            - --config-dir=/tmp/cilium/config-map
          startupProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9876
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            failureThreshold: 105
            periodSeconds: 2
            successThreshold: 1
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9876
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9876
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: cni-chaining-mode
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: custom-cni-conf
                  optional: true
          lifecycle:
            postStart:
              exec:
                command:
                  - "/cni-install.sh"
                  - "--enable-debug=false"
                  - "--cni-exclusive=true"
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          ports:
            - name: prometheus
              containerPort: 9091
              hostPort: 9091
              protocol: TCP
            - name: envoy-metrics
              containerPort: 9095
              hostPort: 9095
              protocol: TCP
            - name: hubble-metrics
              containerPort: 9092
              hostPort: 9092
              protocol: TCP
          securityContext:
            privileged: true
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
            - name: cilium-run
              mountPath: /var/run/cilium
            - name: cni-path
              mountPath: /host/opt/cni/bin
            - name: etc-cni-netd
              mountPath: /host/etc/cni/net.d
            - name: clustermesh-secrets
              mountPath: /var/lib/cilium/clustermesh
              readOnly: true
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
              # Needed to be able to load kernel modules
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: xtables-lock
              mountPath: /run/xtables.lock
            - name: hubble-tls
              mountPath: /var/lib/cilium/tls/hubble
              readOnly: true
      hostNetwork: true
      initContainers:
        # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
        # We use nsenter command with host's cgroup and mount namespaces enabled.
        - name: mount-cgroup
          image: "quay.io/cilium/cilium:v1.11.5@sha256:79e66c3c2677e9ecc3fd5b2ed8e4ea7e49cf99ed6ee181f2ef43400c4db5eef0"
          imagePullPolicy: IfNotPresent
          env:
            - name: CGROUP_ROOT
              value: /run/cilium/cgroupv2
            - name: BIN_PATH
              value: /opt/cni/bin
          command:
            - sh
            - -ec
            # The statically linked Go program binary is invoked to avoid any
            # dependency on utilities like sh and mount that can be missing on certain
            # distros installed on the underlying host. Copy the binary to the
            # same directory where we install cilium cni plugin so that exec permissions
            # are available.
            - |
              cp /usr/bin/cilium-mount /hostbin/cilium-mount;
              nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
              rm /hostbin/cilium-mount
          volumeMounts:
            - name: hostproc
              mountPath: /hostproc
            - name: cni-path
              mountPath: /hostbin
          securityContext:
            privileged: true
        - name: clean-cilium-state
          image: "quay.io/cilium/cilium:v1.11.5@sha256:79e66c3c2677e9ecc3fd5b2ed8e4ea7e49cf99ed6ee181f2ef43400c4db5eef0"
          imagePullPolicy: IfNotPresent
          command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-state
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-bpf-state
                  optional: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Required to mount cgroup filesystem from the host to cilium agent pod
            - name: cilium-cgroup
              mountPath: /run/cilium/cgroupv2
              mountPropagation: HostToContainer
            - name: cilium-run
              mountPath: /var/run/cilium
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
        - name: cilium-run
          hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
            # To keep state between restarts / upgrades for bpf maps
        - name: bpf-maps
          hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
        # To mount cgroup2 filesystem on the host
        - name: hostproc
          hostPath:
            path: /proc
            type: Directory
        # To keep state between restarts / upgrades for cgroup2 filesystem
        - name: cilium-cgroup
          hostPath:
            path: /run/cilium/cgroupv2
            type: DirectoryOrCreate
        # To install cilium cni plugin in the host
        - name: cni-path
          hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
            # To install cilium cni configuration in the host
        - name: etc-cni-netd
          hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
            # To be able to load kernel modules
        - name: lib-modules
          hostPath:
            path: /lib/modules
            # To access iptables concurrently with other processes (e.g. kube-proxy)
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
            # To read the clustermesh configuration
        - name: clustermesh-secrets
          secret:
            secretName: cilium-clustermesh
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            optional: true
            # To read the configuration from the config map
        - name: cilium-config-path
          configMap:
            name: cilium-config
        - name: hubble-tls
          projected:
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            sources:
              - secret:
                  name: hubble-server-certs
                  optional: true
                  items:
                    - key: ca.crt
                      path: client-ca.crt
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "a08ba127eec421071e068ef36d1bc72e39cb6c577d6df7c984c3e4044ba45def"
        prometheus.io/port: "6942"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: io.cilium/app
                    operator: In
                    values:
                      - operator
              topologyKey: kubernetes.io/hostname
      containers:
        - name: cilium-operator
          image: quay.io/cilium/operator-generic:v1.11.5@sha256:8ace281328b27d4216218c604d720b9a63a8aec2bd1996057c79ab0168f9d6d8
          imagePullPolicy: IfNotPresent
          command:
            - cilium-operator-generic
          args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
          ports:
            - name: prometheus
              containerPort: 6942
              hostPort: 6942
              protocol: TCP
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
        - name: cilium-config-path
          configMap:
            name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cilium-system
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "22a94cc00cc04d9628d20bba201a922d54255fc355741218651523eefdda64d7"
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "k8s-app"
                    operator: In
                    values:
                      - cilium
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.11.5@sha256:8498f27a9c85ff74e56e18cfce4f0ccfae6f55d4134d708d364d273f3043f817"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
            - name: config
              mountPath: /etc/hubble-relay
              readOnly: true
            - name: tls
              mountPath: /var/lib/hubble-relay/tls
              readOnly: true
      restartPolicy: Always
      priorityClassName:
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
        - name: config
          configMap:
            name: hubble-relay-config
            items:
              - key: config.yaml
                path: config.yaml
        - name: tls
          projected:
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            sources:
              - secret:
                  name: hubble-relay-client-certs
                  items:
                    - key: ca.crt
                      path: hubble-server-ca.crt
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Namespace
apiVersion: v1
metadata:
  name: cilium-system
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-envoy-configmap-checksum: "0eda85aa70a7980601c8e106bc87ba013750302f87244f973da529da0d0cd8d0"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      priorityClassName:
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
        - name: frontend
          image: "quay.io/cilium/hubble-ui:v0.8.5@sha256:4eaca1ec1741043cfba6066a165b3bf251590cf4ac66371c4f63fbed2224ebb4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
        - name: backend
          image: "quay.io/cilium/hubble-ui-backend:v0.8.5@sha256:2bce50cf6c32719d072706f7ceccad654bfa907b2745a496da99610776fe31ed"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
          ports:
            - name: grpc
              containerPort: 8090
          volumeMounts:
        - name: proxy
          image: "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
          command: [envoy]
          args:
            - -c
            - /etc/envoy.yaml
            - -l
            - info
          volumeMounts:
            - name: hubble-ui-envoy-yaml
              mountPath: /etc/envoy.yaml
              subPath: envoy.yaml
      volumes:
        - name: hubble-ui-envoy-yaml
          configMap:
            name: hubble-ui-envoy
